/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelRawDto model module.
 * @module model/ChannelRawDto
 * @version 0.1.0
 */
class ChannelRawDto {
    /**
     * Constructs a new <code>ChannelRawDto</code>.
     * @alias module:model/ChannelRawDto
     */
    constructor() { 
        
        ChannelRawDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelRawDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelRawDto} obj Optional instance to populate.
     * @return {module:model/ChannelRawDto} The populated <code>ChannelRawDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelRawDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('indexNumber')) {
                obj['indexNumber'] = ApiClient.convertToType(data['indexNumber'], 'Number');
            }
            if (data.hasOwnProperty('fileGuid')) {
                obj['fileGuid'] = ApiClient.convertToType(data['fileGuid'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
            if (data.hasOwnProperty('sampleRate')) {
                obj['sampleRate'] = ApiClient.convertToType(data['sampleRate'], 'Number');
            }
            if (data.hasOwnProperty('summCoeff')) {
                obj['summCoeff'] = ApiClient.convertToType(data['summCoeff'], 'Number');
            }
            if (data.hasOwnProperty('devCoeff')) {
                obj['devCoeff'] = ApiClient.convertToType(data['devCoeff'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelRawDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelRawDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileGuid'] && !(typeof data['fileGuid'] === 'string' || data['fileGuid'] instanceof String)) {
            throw new Error("Expected the field `fileGuid` to be a primitive type in the JSON string but got " + data['fileGuid']);
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
ChannelRawDto.prototype['id'] = undefined;

/**
 * @member {Number} indexNumber
 */
ChannelRawDto.prototype['indexNumber'] = undefined;

/**
 * @member {String} fileGuid
 */
ChannelRawDto.prototype['fileGuid'] = undefined;

/**
 * @member {String} fileName
 */
ChannelRawDto.prototype['fileName'] = undefined;

/**
 * @member {String} name
 */
ChannelRawDto.prototype['name'] = undefined;

/**
 * @member {String} unit
 */
ChannelRawDto.prototype['unit'] = undefined;

/**
 * @member {Number} sampleRate
 */
ChannelRawDto.prototype['sampleRate'] = undefined;

/**
 * @member {Number} summCoeff
 */
ChannelRawDto.prototype['summCoeff'] = undefined;

/**
 * @member {Number} devCoeff
 */
ChannelRawDto.prototype['devCoeff'] = undefined;






export default ChannelRawDto;

