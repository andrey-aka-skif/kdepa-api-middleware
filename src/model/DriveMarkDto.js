/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DriveMarkDto model module.
 * @module model/DriveMarkDto
 * @version 0.1.0
 */
class DriveMarkDto {
    /**
     * Constructs a new <code>DriveMarkDto</code>.
     * @alias module:model/DriveMarkDto
     */
    constructor() { 
        
        DriveMarkDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DriveMarkDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DriveMarkDto} obj Optional instance to populate.
     * @return {module:model/DriveMarkDto} The populated <code>DriveMarkDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DriveMarkDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('gearRatio')) {
                obj['gearRatio'] = ApiClient.convertToType(data['gearRatio'], 'Number');
            }
            if (data.hasOwnProperty('torque')) {
                obj['torque'] = ApiClient.convertToType(data['torque'], 'Number');
            }
            if (data.hasOwnProperty('rotationFrequency')) {
                obj['rotationFrequency'] = ApiClient.convertToType(data['rotationFrequency'], 'Number');
            }
            if (data.hasOwnProperty('efficiency')) {
                obj['efficiency'] = ApiClient.convertToType(data['efficiency'], 'Number');
            }
            if (data.hasOwnProperty('modification')) {
                obj['modification'] = ApiClient.convertToType(data['modification'], 'String');
            }
            if (data.hasOwnProperty('turnNumberMin')) {
                obj['turnNumberMin'] = ApiClient.convertToType(data['turnNumberMin'], 'Number');
            }
            if (data.hasOwnProperty('turnNumberMax')) {
                obj['turnNumberMax'] = ApiClient.convertToType(data['turnNumberMax'], 'Number');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('movementTimeMin')) {
                obj['movementTimeMin'] = ApiClient.convertToType(data['movementTimeMin'], 'Number');
            }
            if (data.hasOwnProperty('movementTimeMax')) {
                obj['movementTimeMax'] = ApiClient.convertToType(data['movementTimeMax'], 'Number');
            }
            if (data.hasOwnProperty('serviceLife')) {
                obj['serviceLife'] = ApiClient.convertToType(data['serviceLife'], 'Number');
            }
            if (data.hasOwnProperty('assignedResource')) {
                obj['assignedResource'] = ApiClient.convertToType(data['assignedResource'], 'Number');
            }
            if (data.hasOwnProperty('timeToFailure')) {
                obj['timeToFailure'] = ApiClient.convertToType(data['timeToFailure'], 'Number');
            }
            if (data.hasOwnProperty('probabilityOfFailure')) {
                obj['probabilityOfFailure'] = ApiClient.convertToType(data['probabilityOfFailure'], 'Number');
            }
            if (data.hasOwnProperty('technicalUseCoeff')) {
                obj['technicalUseCoeff'] = ApiClient.convertToType(data['technicalUseCoeff'], 'Number');
            }
            if (data.hasOwnProperty('availabilityFactor')) {
                obj['availabilityFactor'] = ApiClient.convertToType(data['availabilityFactor'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DriveMarkDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DriveMarkDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['modification'] && !(typeof data['modification'] === 'string' || data['modification'] instanceof String)) {
            throw new Error("Expected the field `modification` to be a primitive type in the JSON string but got " + data['modification']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
DriveMarkDto.prototype['id'] = undefined;

/**
 * @member {String} name
 */
DriveMarkDto.prototype['name'] = undefined;

/**
 * @member {Number} gearRatio
 */
DriveMarkDto.prototype['gearRatio'] = undefined;

/**
 * @member {Number} torque
 */
DriveMarkDto.prototype['torque'] = undefined;

/**
 * @member {Number} rotationFrequency
 */
DriveMarkDto.prototype['rotationFrequency'] = undefined;

/**
 * @member {Number} efficiency
 */
DriveMarkDto.prototype['efficiency'] = undefined;

/**
 * @member {String} modification
 */
DriveMarkDto.prototype['modification'] = undefined;

/**
 * @member {Number} turnNumberMin
 */
DriveMarkDto.prototype['turnNumberMin'] = undefined;

/**
 * @member {Number} turnNumberMax
 */
DriveMarkDto.prototype['turnNumberMax'] = undefined;

/**
 * @member {Number} weight
 */
DriveMarkDto.prototype['weight'] = undefined;

/**
 * @member {Number} movementTimeMin
 */
DriveMarkDto.prototype['movementTimeMin'] = undefined;

/**
 * @member {Number} movementTimeMax
 */
DriveMarkDto.prototype['movementTimeMax'] = undefined;

/**
 * @member {Number} serviceLife
 */
DriveMarkDto.prototype['serviceLife'] = undefined;

/**
 * @member {Number} assignedResource
 */
DriveMarkDto.prototype['assignedResource'] = undefined;

/**
 * @member {Number} timeToFailure
 */
DriveMarkDto.prototype['timeToFailure'] = undefined;

/**
 * @member {Number} probabilityOfFailure
 */
DriveMarkDto.prototype['probabilityOfFailure'] = undefined;

/**
 * @member {Number} technicalUseCoeff
 */
DriveMarkDto.prototype['technicalUseCoeff'] = undefined;

/**
 * @member {Number} availabilityFactor
 */
DriveMarkDto.prototype['availabilityFactor'] = undefined;






export default DriveMarkDto;

