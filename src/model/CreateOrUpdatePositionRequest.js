/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateOrUpdatePositionRequest model module.
 * @module model/CreateOrUpdatePositionRequest
 * @version 0.1.0
 */
class CreateOrUpdatePositionRequest {
    /**
     * Constructs a new <code>CreateOrUpdatePositionRequest</code>.
     * @alias module:model/CreateOrUpdatePositionRequest
     */
    constructor() { 
        
        CreateOrUpdatePositionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateOrUpdatePositionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrUpdatePositionRequest} obj Optional instance to populate.
     * @return {module:model/CreateOrUpdatePositionRequest} The populated <code>CreateOrUpdatePositionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrUpdatePositionRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('systemId')) {
                obj['systemId'] = ApiClient.convertToType(data['systemId'], 'Number');
            }
            if (data.hasOwnProperty('shopId')) {
                obj['shopId'] = ApiClient.convertToType(data['shopId'], 'Number');
            }
            if (data.hasOwnProperty('blockId')) {
                obj['blockId'] = ApiClient.convertToType(data['blockId'], 'Number');
            }
            if (data.hasOwnProperty('safetyClassId')) {
                obj['safetyClassId'] = ApiClient.convertToType(data['safetyClassId'], 'Number');
            }
            if (data.hasOwnProperty('equipmentGroupId')) {
                obj['equipmentGroupId'] = ApiClient.convertToType(data['equipmentGroupId'], 'Number');
            }
            if (data.hasOwnProperty('purpose')) {
                obj['purpose'] = ApiClient.convertToType(data['purpose'], 'String');
            }
            if (data.hasOwnProperty('operativeHeight')) {
                obj['operativeHeight'] = ApiClient.convertToType(data['operativeHeight'], 'String');
            }
            if (data.hasOwnProperty('marking')) {
                obj['marking'] = ApiClient.convertToType(data['marking'], 'String');
            }
            if (data.hasOwnProperty('cabinetId')) {
                obj['cabinetId'] = ApiClient.convertToType(data['cabinetId'], 'Number');
            }
            if (data.hasOwnProperty('seismicCategoryId')) {
                obj['seismicCategoryId'] = ApiClient.convertToType(data['seismicCategoryId'], 'Number');
            }
            if (data.hasOwnProperty('climaticExecutionId')) {
                obj['climaticExecutionId'] = ApiClient.convertToType(data['climaticExecutionId'], 'Number');
            }
            if (data.hasOwnProperty('atmosphereTypeId')) {
                obj['atmosphereTypeId'] = ApiClient.convertToType(data['atmosphereTypeId'], 'Number');
            }
            if (data.hasOwnProperty('mediumId')) {
                obj['mediumId'] = ApiClient.convertToType(data['mediumId'], 'Number');
            }
            if (data.hasOwnProperty('mediumPressure')) {
                obj['mediumPressure'] = ApiClient.convertToType(data['mediumPressure'], 'Number');
            }
            if (data.hasOwnProperty('mediumDensity')) {
                obj['mediumDensity'] = ApiClient.convertToType(data['mediumDensity'], 'Number');
            }
            if (data.hasOwnProperty('mediumTemperature')) {
                obj['mediumTemperature'] = ApiClient.convertToType(data['mediumTemperature'], 'Number');
            }
            if (data.hasOwnProperty('mediumHumidity')) {
                obj['mediumHumidity'] = ApiClient.convertToType(data['mediumHumidity'], 'Number');
            }
            if (data.hasOwnProperty('roomAirTemperature')) {
                obj['roomAirTemperature'] = ApiClient.convertToType(data['roomAirTemperature'], 'Number');
            }
            if (data.hasOwnProperty('roomAbsolutePressure')) {
                obj['roomAbsolutePressure'] = ApiClient.convertToType(data['roomAbsolutePressure'], 'Number');
            }
            if (data.hasOwnProperty('roomHumidity')) {
                obj['roomHumidity'] = ApiClient.convertToType(data['roomHumidity'], 'Number');
            }
            if (data.hasOwnProperty('roomDustLevel')) {
                obj['roomDustLevel'] = ApiClient.convertToType(data['roomDustLevel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrUpdatePositionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrUpdatePositionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['purpose'] && !(typeof data['purpose'] === 'string' || data['purpose'] instanceof String)) {
            throw new Error("Expected the field `purpose` to be a primitive type in the JSON string but got " + data['purpose']);
        }
        // ensure the json data is a string
        if (data['operativeHeight'] && !(typeof data['operativeHeight'] === 'string' || data['operativeHeight'] instanceof String)) {
            throw new Error("Expected the field `operativeHeight` to be a primitive type in the JSON string but got " + data['operativeHeight']);
        }
        // ensure the json data is a string
        if (data['marking'] && !(typeof data['marking'] === 'string' || data['marking'] instanceof String)) {
            throw new Error("Expected the field `marking` to be a primitive type in the JSON string but got " + data['marking']);
        }
        // ensure the json data is a string
        if (data['roomDustLevel'] && !(typeof data['roomDustLevel'] === 'string' || data['roomDustLevel'] instanceof String)) {
            throw new Error("Expected the field `roomDustLevel` to be a primitive type in the JSON string but got " + data['roomDustLevel']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
CreateOrUpdatePositionRequest.prototype['name'] = undefined;

/**
 * @member {Number} systemId
 */
CreateOrUpdatePositionRequest.prototype['systemId'] = undefined;

/**
 * @member {Number} shopId
 */
CreateOrUpdatePositionRequest.prototype['shopId'] = undefined;

/**
 * @member {Number} blockId
 */
CreateOrUpdatePositionRequest.prototype['blockId'] = undefined;

/**
 * @member {Number} safetyClassId
 */
CreateOrUpdatePositionRequest.prototype['safetyClassId'] = undefined;

/**
 * @member {Number} equipmentGroupId
 */
CreateOrUpdatePositionRequest.prototype['equipmentGroupId'] = undefined;

/**
 * @member {String} purpose
 */
CreateOrUpdatePositionRequest.prototype['purpose'] = undefined;

/**
 * @member {String} operativeHeight
 */
CreateOrUpdatePositionRequest.prototype['operativeHeight'] = undefined;

/**
 * @member {String} marking
 */
CreateOrUpdatePositionRequest.prototype['marking'] = undefined;

/**
 * @member {Number} cabinetId
 */
CreateOrUpdatePositionRequest.prototype['cabinetId'] = undefined;

/**
 * @member {Number} seismicCategoryId
 */
CreateOrUpdatePositionRequest.prototype['seismicCategoryId'] = undefined;

/**
 * @member {Number} climaticExecutionId
 */
CreateOrUpdatePositionRequest.prototype['climaticExecutionId'] = undefined;

/**
 * @member {Number} atmosphereTypeId
 */
CreateOrUpdatePositionRequest.prototype['atmosphereTypeId'] = undefined;

/**
 * @member {Number} mediumId
 */
CreateOrUpdatePositionRequest.prototype['mediumId'] = undefined;

/**
 * @member {Number} mediumPressure
 */
CreateOrUpdatePositionRequest.prototype['mediumPressure'] = undefined;

/**
 * @member {Number} mediumDensity
 */
CreateOrUpdatePositionRequest.prototype['mediumDensity'] = undefined;

/**
 * @member {Number} mediumTemperature
 */
CreateOrUpdatePositionRequest.prototype['mediumTemperature'] = undefined;

/**
 * @member {Number} mediumHumidity
 */
CreateOrUpdatePositionRequest.prototype['mediumHumidity'] = undefined;

/**
 * @member {Number} roomAirTemperature
 */
CreateOrUpdatePositionRequest.prototype['roomAirTemperature'] = undefined;

/**
 * @member {Number} roomAbsolutePressure
 */
CreateOrUpdatePositionRequest.prototype['roomAbsolutePressure'] = undefined;

/**
 * @member {Number} roomHumidity
 */
CreateOrUpdatePositionRequest.prototype['roomHumidity'] = undefined;

/**
 * @member {String} roomDustLevel
 */
CreateOrUpdatePositionRequest.prototype['roomDustLevel'] = undefined;






export default CreateOrUpdatePositionRequest;

