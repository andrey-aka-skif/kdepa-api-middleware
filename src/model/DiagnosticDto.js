/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SummaryFullDto from './SummaryFullDto';
import SummaryShortDto from './SummaryShortDto';

/**
 * The DiagnosticDto model module.
 * @module model/DiagnosticDto
 * @version 0.1.0
 */
class DiagnosticDto {
    /**
     * Constructs a new <code>DiagnosticDto</code>.
     * @alias module:model/DiagnosticDto
     */
    constructor() { 
        
        DiagnosticDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiagnosticDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiagnosticDto} obj Optional instance to populate.
     * @return {module:model/DiagnosticDto} The populated <code>DiagnosticDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiagnosticDto();

            if (data.hasOwnProperty('short')) {
                obj['short'] = SummaryShortDto.constructFromObject(data['short']);
            }
            if (data.hasOwnProperty('full')) {
                obj['full'] = SummaryFullDto.constructFromObject(data['full']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiagnosticDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiagnosticDto</code>.
     */
    static validateJSON(data) {
        // validate the optional field `short`
        if (data['short']) { // data not null
          SummaryShortDto.validateJSON(data['short']);
        }
        // validate the optional field `full`
        if (data['full']) { // data not null
          SummaryFullDto.validateJSON(data['full']);
        }

        return true;
    }


}



/**
 * @member {module:model/SummaryShortDto} short
 */
DiagnosticDto.prototype['short'] = undefined;

/**
 * @member {module:model/SummaryFullDto} full
 */
DiagnosticDto.prototype['full'] = undefined;






export default DiagnosticDto;

