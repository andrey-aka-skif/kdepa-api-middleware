/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SurveysExtendedQueryFilterDto model module.
 * @module model/SurveysExtendedQueryFilterDto
 * @version 0.1.0
 */
class SurveysExtendedQueryFilterDto {
    /**
     * Constructs a new <code>SurveysExtendedQueryFilterDto</code>.
     * @alias module:model/SurveysExtendedQueryFilterDto
     */
    constructor() { 
        
        SurveysExtendedQueryFilterDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SurveysExtendedQueryFilterDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SurveysExtendedQueryFilterDto} obj Optional instance to populate.
     * @return {module:model/SurveysExtendedQueryFilterDto} The populated <code>SurveysExtendedQueryFilterDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SurveysExtendedQueryFilterDto();

            if (data.hasOwnProperty('positionIds')) {
                obj['positionIds'] = ApiClient.convertToType(data['positionIds'], ['Number']);
            }
            if (data.hasOwnProperty('dateFrom')) {
                obj['dateFrom'] = ApiClient.convertToType(data['dateFrom'], 'Date');
            }
            if (data.hasOwnProperty('dateTo')) {
                obj['dateTo'] = ApiClient.convertToType(data['dateTo'], 'Date');
            }
            if (data.hasOwnProperty('hasElectricChannel')) {
                obj['hasElectricChannel'] = ApiClient.convertToType(data['hasElectricChannel'], 'Boolean');
            }
            if (data.hasOwnProperty('hasTorqueChannel')) {
                obj['hasTorqueChannel'] = ApiClient.convertToType(data['hasTorqueChannel'], 'Boolean');
            }
            if (data.hasOwnProperty('hasActualAssembly')) {
                obj['hasActualAssembly'] = ApiClient.convertToType(data['hasActualAssembly'], 'Boolean');
            }
            if (data.hasOwnProperty('hasArchivalAssembly')) {
                obj['hasArchivalAssembly'] = ApiClient.convertToType(data['hasArchivalAssembly'], 'Boolean');
            }
            if (data.hasOwnProperty('isSynched')) {
                obj['isSynched'] = ApiClient.convertToType(data['isSynched'], 'Boolean');
            }
            if (data.hasOwnProperty('isSliced')) {
                obj['isSliced'] = ApiClient.convertToType(data['isSliced'], 'Boolean');
            }
            if (data.hasOwnProperty('isAnalyzed')) {
                obj['isAnalyzed'] = ApiClient.convertToType(data['isAnalyzed'], 'Boolean');
            }
            if (data.hasOwnProperty('hasStatAnalysis')) {
                obj['hasStatAnalysis'] = ApiClient.convertToType(data['hasStatAnalysis'], 'Boolean');
            }
            if (data.hasOwnProperty('hasTorqueAnalysis')) {
                obj['hasTorqueAnalysis'] = ApiClient.convertToType(data['hasTorqueAnalysis'], 'Boolean');
            }
            if (data.hasOwnProperty('hasTrend')) {
                obj['hasTrend'] = ApiClient.convertToType(data['hasTrend'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SurveysExtendedQueryFilterDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SurveysExtendedQueryFilterDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['positionIds'])) {
            throw new Error("Expected the field `positionIds` to be an array in the JSON data but got " + data['positionIds']);
        }

        return true;
    }


}



/**
 * @member {Array.<Number>} positionIds
 */
SurveysExtendedQueryFilterDto.prototype['positionIds'] = undefined;

/**
 * @member {Date} dateFrom
 */
SurveysExtendedQueryFilterDto.prototype['dateFrom'] = undefined;

/**
 * @member {Date} dateTo
 */
SurveysExtendedQueryFilterDto.prototype['dateTo'] = undefined;

/**
 * @member {Boolean} hasElectricChannel
 */
SurveysExtendedQueryFilterDto.prototype['hasElectricChannel'] = undefined;

/**
 * @member {Boolean} hasTorqueChannel
 */
SurveysExtendedQueryFilterDto.prototype['hasTorqueChannel'] = undefined;

/**
 * @member {Boolean} hasActualAssembly
 */
SurveysExtendedQueryFilterDto.prototype['hasActualAssembly'] = undefined;

/**
 * @member {Boolean} hasArchivalAssembly
 */
SurveysExtendedQueryFilterDto.prototype['hasArchivalAssembly'] = undefined;

/**
 * @member {Boolean} isSynched
 */
SurveysExtendedQueryFilterDto.prototype['isSynched'] = undefined;

/**
 * @member {Boolean} isSliced
 */
SurveysExtendedQueryFilterDto.prototype['isSliced'] = undefined;

/**
 * @member {Boolean} isAnalyzed
 */
SurveysExtendedQueryFilterDto.prototype['isAnalyzed'] = undefined;

/**
 * @member {Boolean} hasStatAnalysis
 */
SurveysExtendedQueryFilterDto.prototype['hasStatAnalysis'] = undefined;

/**
 * @member {Boolean} hasTorqueAnalysis
 */
SurveysExtendedQueryFilterDto.prototype['hasTorqueAnalysis'] = undefined;

/**
 * @member {Boolean} hasTrend
 */
SurveysExtendedQueryFilterDto.prototype['hasTrend'] = undefined;






export default SurveysExtendedQueryFilterDto;

