/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SlicingRequest from './SlicingRequest';
import TimeSpan from './TimeSpan';
import UpdateChannelSubRequest from './UpdateChannelSubRequest';

/**
 * The UpdateSurveyRequest model module.
 * @module model/UpdateSurveyRequest
 * @version 0.1.0
 */
class UpdateSurveyRequest {
    /**
     * Constructs a new <code>UpdateSurveyRequest</code>.
     * @alias module:model/UpdateSurveyRequest
     */
    constructor() { 
        
        UpdateSurveyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSurveyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSurveyRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSurveyRequest} The populated <code>UpdateSurveyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSurveyRequest();

            if (data.hasOwnProperty('assemblyId')) {
                obj['assemblyId'] = ApiClient.convertToType(data['assemblyId'], 'Number');
            }
            if (data.hasOwnProperty('dateTime')) {
                obj['dateTime'] = ApiClient.convertToType(data['dateTime'], 'Date');
            }
            if (data.hasOwnProperty('resistance')) {
                obj['resistance'] = ApiClient.convertToType(data['resistance'], 'Number');
            }
            if (data.hasOwnProperty('mvo')) {
                obj['mvo'] = ApiClient.convertToType(data['mvo'], 'Number');
            }
            if (data.hasOwnProperty('mvz')) {
                obj['mvz'] = ApiClient.convertToType(data['mvz'], 'Number');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('slicing')) {
                obj['slicing'] = SlicingRequest.constructFromObject(data['slicing']);
            }
            if (data.hasOwnProperty('shift')) {
                obj['shift'] = TimeSpan.constructFromObject(data['shift']);
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], [UpdateChannelSubRequest]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSurveyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSurveyRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // validate the optional field `slicing`
        if (data['slicing']) { // data not null
          SlicingRequest.validateJSON(data['slicing']);
        }
        // validate the optional field `shift`
        if (data['shift']) { // data not null
          TimeSpan.validateJSON(data['shift']);
        }
        if (data['channels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['channels'])) {
                throw new Error("Expected the field `channels` to be an array in the JSON data but got " + data['channels']);
            }
            // validate the optional field `channels` (array)
            for (const item of data['channels']) {
                UpdateChannelSubRequest.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} assemblyId
 */
UpdateSurveyRequest.prototype['assemblyId'] = undefined;

/**
 * @member {Date} dateTime
 */
UpdateSurveyRequest.prototype['dateTime'] = undefined;

/**
 * @member {Number} resistance
 */
UpdateSurveyRequest.prototype['resistance'] = undefined;

/**
 * @member {Number} mvo
 */
UpdateSurveyRequest.prototype['mvo'] = undefined;

/**
 * @member {Number} mvz
 */
UpdateSurveyRequest.prototype['mvz'] = undefined;

/**
 * @member {String} direction
 */
UpdateSurveyRequest.prototype['direction'] = undefined;

/**
 * @member {String} comment
 */
UpdateSurveyRequest.prototype['comment'] = undefined;

/**
 * @member {module:model/SlicingRequest} slicing
 */
UpdateSurveyRequest.prototype['slicing'] = undefined;

/**
 * @member {module:model/TimeSpan} shift
 */
UpdateSurveyRequest.prototype['shift'] = undefined;

/**
 * @member {Array.<module:model/UpdateChannelSubRequest>} channels
 */
UpdateSurveyRequest.prototype['channels'] = undefined;






export default UpdateSurveyRequest;

