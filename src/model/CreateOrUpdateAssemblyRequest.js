/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateOrUpdateAssemblyRequest model module.
 * @module model/CreateOrUpdateAssemblyRequest
 * @version 0.1.0
 */
class CreateOrUpdateAssemblyRequest {
    /**
     * Constructs a new <code>CreateOrUpdateAssemblyRequest</code>.
     * @alias module:model/CreateOrUpdateAssemblyRequest
     */
    constructor() { 
        
        CreateOrUpdateAssemblyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateOrUpdateAssemblyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateOrUpdateAssemblyRequest} obj Optional instance to populate.
     * @return {module:model/CreateOrUpdateAssemblyRequest} The populated <code>CreateOrUpdateAssemblyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateOrUpdateAssemblyRequest();

            if (data.hasOwnProperty('valveId')) {
                obj['valveId'] = ApiClient.convertToType(data['valveId'], 'Number');
            }
            if (data.hasOwnProperty('driveId')) {
                obj['driveId'] = ApiClient.convertToType(data['driveId'], 'Number');
            }
            if (data.hasOwnProperty('motorId')) {
                obj['motorId'] = ApiClient.convertToType(data['motorId'], 'Number');
            }
            if (data.hasOwnProperty('positionId')) {
                obj['positionId'] = ApiClient.convertToType(data['positionId'], 'Number');
            }
            if (data.hasOwnProperty('buildingDate')) {
                obj['buildingDate'] = ApiClient.convertToType(data['buildingDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateOrUpdateAssemblyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateOrUpdateAssemblyRequest</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} valveId
 */
CreateOrUpdateAssemblyRequest.prototype['valveId'] = undefined;

/**
 * @member {Number} driveId
 */
CreateOrUpdateAssemblyRequest.prototype['driveId'] = undefined;

/**
 * @member {Number} motorId
 */
CreateOrUpdateAssemblyRequest.prototype['motorId'] = undefined;

/**
 * @member {Number} positionId
 */
CreateOrUpdateAssemblyRequest.prototype['positionId'] = undefined;

/**
 * @member {Date} buildingDate
 */
CreateOrUpdateAssemblyRequest.prototype['buildingDate'] = undefined;






export default CreateOrUpdateAssemblyRequest;

