/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KdepaApi);
  }
}(this, function(expect, KdepaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KdepaApi.SurveyExtendedDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SurveyExtendedDto', function() {
    it('should create an instance of SurveyExtendedDto', function() {
      // uncomment below and update the code to test SurveyExtendedDto
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be.a(KdepaApi.SurveyExtendedDto);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property dateTime (base name: "dateTime")', function() {
      // uncomment below and update the code to test the property dateTime
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property positionId (base name: "positionId")', function() {
      // uncomment below and update the code to test the property positionId
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property channelEl (base name: "channelEl")', function() {
      // uncomment below and update the code to test the property channelEl
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property channelTorque (base name: "channelTorque")', function() {
      // uncomment below and update the code to test the property channelTorque
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property channelsInfo (base name: "channelsInfo")', function() {
      // uncomment below and update the code to test the property channelsInfo
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property isArchivalAssembly (base name: "isArchivalAssembly")', function() {
      // uncomment below and update the code to test the property isArchivalAssembly
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property phaseSynched (base name: "phaseSynched")', function() {
      // uncomment below and update the code to test the property phaseSynched
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property phaseSliced (base name: "phaseSliced")', function() {
      // uncomment below and update the code to test the property phaseSliced
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property phaseAnalized (base name: "phaseAnalized")', function() {
      // uncomment below and update the code to test the property phaseAnalized
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property phasesInfo (base name: "phasesInfo")', function() {
      // uncomment below and update the code to test the property phasesInfo
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property extraStat (base name: "extraStat")', function() {
      // uncomment below and update the code to test the property extraStat
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property extraTorque (base name: "extraTorque")', function() {
      // uncomment below and update the code to test the property extraTorque
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property extraTrend (base name: "extraTrend")', function() {
      // uncomment below and update the code to test the property extraTrend
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property extraInfo (base name: "extraInfo")', function() {
      // uncomment below and update the code to test the property extraInfo
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new KdepaApi.SurveyExtendedDto();
      //expect(instance).to.be();
    });

  });

}));
