/**
 * kdepa-api
 * КДЭПА CRUD API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KdepaApi);
  }
}(this, function(expect, KdepaApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KdepaApi.TimeSpan();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TimeSpan', function() {
    it('should create an instance of TimeSpan', function() {
      // uncomment below and update the code to test TimeSpan
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be.a(KdepaApi.TimeSpan);
    });

    it('should have the property ticks (base name: "ticks")', function() {
      // uncomment below and update the code to test the property ticks
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property days (base name: "days")', function() {
      // uncomment below and update the code to test the property days
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property hours (base name: "hours")', function() {
      // uncomment below and update the code to test the property hours
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property milliseconds (base name: "milliseconds")', function() {
      // uncomment below and update the code to test the property milliseconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property microseconds (base name: "microseconds")', function() {
      // uncomment below and update the code to test the property microseconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property nanoseconds (base name: "nanoseconds")', function() {
      // uncomment below and update the code to test the property nanoseconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property minutes (base name: "minutes")', function() {
      // uncomment below and update the code to test the property minutes
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property seconds (base name: "seconds")', function() {
      // uncomment below and update the code to test the property seconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalDays (base name: "totalDays")', function() {
      // uncomment below and update the code to test the property totalDays
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalHours (base name: "totalHours")', function() {
      // uncomment below and update the code to test the property totalHours
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalMilliseconds (base name: "totalMilliseconds")', function() {
      // uncomment below and update the code to test the property totalMilliseconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalMicroseconds (base name: "totalMicroseconds")', function() {
      // uncomment below and update the code to test the property totalMicroseconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalNanoseconds (base name: "totalNanoseconds")', function() {
      // uncomment below and update the code to test the property totalNanoseconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalMinutes (base name: "totalMinutes")', function() {
      // uncomment below and update the code to test the property totalMinutes
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

    it('should have the property totalSeconds (base name: "totalSeconds")', function() {
      // uncomment below and update the code to test the property totalSeconds
      //var instance = new KdepaApi.TimeSpan();
      //expect(instance).to.be();
    });

  });

}));
